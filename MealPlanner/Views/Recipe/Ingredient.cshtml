<!DOCTYPE html>
@model List<Ingredient>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dodawanie składników z typem posiłku</title>
    <style>
        body {
            color: white;
            background-color: #282c34;
        }

        .field-container {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
            gap: 10px;
        }

        input, select {
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
        }

        input {
            width: 150px;
        }

        select {
            width: 150px;
        }

        #next-page-button {
            margin-top: 20px;
            display: none;
        }

        #meal-type-container {
            margin-bottom: 30px;
        }

        button {
            padding: 8px 16px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 14px;
            cursor: pointer;
        }

            button:hover {
                background-color: #0056b3;
            }
    </style>
</head>
<body>
    <h1>Dodaj składniki do przepisu</h1>

    <div id="meal-type-container">
        <label for="meal-type">Typ posiłku:</label>
        <select id="meal-type" name="meal-type">
            <option value="breakfast">Breakfast</option>
            <option value="lunch">Lunch</option>
            <option value="dinner">Dinner</option>
            <option value="snack">Snack</option>
        </select>
    </div>

    <div id="fields-container"></div>
    <button id="add-field-button">Dodaj składnik</button>
    <button id="next-page-button" onclick="goToNextPage()">Przejdź do następnej strony</button>

    <script>
        const availableIngredients = @Html.Raw(Json.Serialize(Model.Select(i => new { i.Name, i.Macronutrients.Unit }).ToList()));

        console.log("Available Ingredients:", availableIngredients);

        const fieldsContainer = document.getElementById('fields-container');
        const addFieldButton = document.getElementById('add-field-button');
        const nextPageButton = document.getElementById('next-page-button');
        let hasAddedField = false;

        addFieldButton.addEventListener('click', () => {
            const fieldContainer = document.createElement('div');
            fieldContainer.className = 'field-container';

            const ingredientSelect = document.createElement('select');
            ingredientSelect.name = 'ingredient';

            const placeholderOption = document.createElement('option');
            placeholderOption.value = '';
            placeholderOption.textContent = 'Wybierz składnik';
            placeholderOption.disabled = true;
            placeholderOption.selected = true;
            ingredientSelect.appendChild(placeholderOption);

            availableIngredients.forEach(ingredient => {
                const option = document.createElement('option');
                option.value = ingredient.Name;
                option.textContent = ingredient.name;
                option.dataset.unit = ingredient.unit;
                ingredientSelect.appendChild(option);
            });

            const unitSelect = document.createElement('select');
            unitSelect.name = 'unit';
            unitSelect.disabled = true;

            const quantityInput = document.createElement('input');
            quantityInput.type = 'number';
            quantityInput.placeholder = 'Wpisz ilość';
            quantityInput.min = 0;

            ingredientSelect.addEventListener('change', (event) => {
                const selectedUnit = event.target.selectedOptions[0].dataset.unit;
                console.log("Selected Ingredient:", event.target.value);
                console.log("Selected Unit:", selectedUnit);
                unitSelect.innerHTML = '';
                const option = document.createElement('option');
                option.value = selectedUnit;
                option.textContent = selectedUnit;
                unitSelect.appendChild(option);
            });

            fieldContainer.appendChild(ingredientSelect);
            fieldContainer.appendChild(unitSelect);
            fieldContainer.appendChild(quantityInput);

            fieldsContainer.appendChild(fieldContainer);

            hasAddedField = true;
            nextPageButton.style.display = 'block';
        });

        function goToNextPage() {
            const mealType = document.getElementById('meal-type').value;

            if (!mealType) {
                alert('Wybierz typ posiłku, aby kontynuować.');
                return;
            }

            if (hasAddedField) {
                window.location.href = '@Url.Action("Steps", "Recipe")';
            } else {
                alert('Dodaj przynajmniej jeden składnik, aby przejść dalej!');
            }
        }
    </script>
</body>
</html>
