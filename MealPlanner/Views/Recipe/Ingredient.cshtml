<!DOCTYPE html>
@model List<Ingredient>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dodawanie składników z typem posiłku</title>
    <style>
        body {
            color: white;
            background-color: #282c34;
        }

        textarea {
            width: 100%;
            max-width: 500px;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
            resize: vertical;
        }

        #description-container {
            margin-top: 20px;
        }

        .field-container {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
            gap: 10px;
        }

        input, select {
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
        }

        input {
            width: 150px;
        }

        select {
            width: 150px;
        }

        #next-page-button {
            margin-top: 20px;
            display: none;
        }

        #meal-type-container {
            margin-bottom: 30px;
        }

        button {
            padding: 8px 16px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 14px;
            cursor: pointer;
        }

            button:hover {
                background-color: #0056b3;
            }
    </style>
</head>
<body>
    <h1>Dodaj składniki do przepisu</h1>

    <form id="ingredients-form" asp-controller="Recipe" asp-action="AddIngredients" method="post">
        <div id="recipe-name-container" style="margin-bottom:10px">
            <label for="recipe-name">Nazwa przepisu:</label>
            <input type="text" id="recipe-name" name="recipe-name" placeholder="Wpisz nazwę przepisu" required />
        </div>
        <div id="meal-type-container">
            <label asp for="MealType">Typ posiłku:</label>
            <select asp name="meal-type">
                <option value="breakfast">Breakfast</option>
                <option value="lunch">Lunch</option>
                <option value="dinner">Dinner</option>
                <option value="snack">Snack</option>
            </select>
        </div>

        <div id="fields-container"></div>
        <button type="button" id="add-field-button">Dodaj składnik</button>

        <div id="description-container">
            <label for="description">Opis przyrządzenia:</label>
            <br />
            <textarea id="description" name="description" rows="5" cols="50" placeholder="Opisz, jak przygotować to danie"></textarea>
        </div>

        <button type="submit" id="next-page-button">Przejdź do następnej strony</button>
    </form>

    <script>
        const availableIngredients = @Html.Raw(Json.Serialize(Model.Select(i => new { i.Name, i.Macronutrients.Unit }).ToList()));

        console.log("Available Ingredients:", availableIngredients);

        const fieldsContainer = document.getElementById('fields-container');
        const addFieldButton = document.getElementById('add-field-button');
        const nextPageButton = document.getElementById('next-page-button');
        let hasAddedField = false;

        addFieldButton.addEventListener('click', () => {
            const fieldContainer = document.createElement('div');
            fieldContainer.className = 'field-container';

            const ingredientSelect = document.createElement('select');
            ingredientSelect.name = 'ingredient[]';

            const placeholderOption = document.createElement('option');
            placeholderOption.value = '';
            placeholderOption.textContent = 'Wybierz składnik';
            placeholderOption.disabled = true;
            placeholderOption.selected = true;
            ingredientSelect.appendChild(placeholderOption);

            availableIngredients.forEach(ingredient => {
                const option = document.createElement('option');
                option.value = ingredient.Name;
                option.textContent = ingredient.name;
                option.dataset.unit = ingredient.unit;
                ingredientSelect.appendChild(option);
            });

            const unitSelect = document.createElement('select');
            unitSelect.name = 'unit';
            unitSelect.disabled = true;

            const quantityInput = document.createElement('input');
            quantityInput.type = 'number[]';
            quantityInput.placeholder = 'Wpisz ilość';
            quantityInput.min = 0;

            ingredientSelect.addEventListener('change', (event) => {
                const selectedUnit = event.target.selectedOptions[0].dataset.unit;
                console.log("Selected Ingredient:", event.target.value);
                console.log("Selected Unit:", selectedUnit);
                unitSelect.innerHTML = '';
                const option = document.createElement('option');
                option.value = selectedUnit;
                option.textContent = selectedUnit;
                unitSelect.appendChild(option);
            });

            fieldContainer.appendChild(ingredientSelect);
            fieldContainer.appendChild(unitSelect);
            fieldContainer.appendChild(quantityInput);

            fieldsContainer.appendChild(fieldContainer);

            hasAddedField = true;
            nextPageButton.style.display = 'block';
        });

        document.getElementById('ingredients-form').addEventListener('submit', function (event) {
            if (!hasAddedField) {
                alert('Dodaj przynajmniej jeden składnik, aby kontynuować!');
                event.preventDefault();  // Zapobiega wysłaniu formularza, jeśli nie dodano składnika
            }

            const mealType = document.getElementById('meal-type').value;
            if (!mealType) {
                alert('Wybierz typ posiłku, aby kontynuować.');
                event.preventDefault();  // Zapobiega wysłaniu formularza, jeśli typ posiłku nie jest wybrany
            }

            const description = document.getElementById('description').value.trim();
            if (!description) {
                alert('Podaj opis przyrządzenia dania, aby kontynuować.');
                event.preventDefault();
            }
        });
    </script>
</body>
</html>
